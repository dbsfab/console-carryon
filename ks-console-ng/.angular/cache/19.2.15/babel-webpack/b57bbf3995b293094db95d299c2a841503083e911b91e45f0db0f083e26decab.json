{"ast":null,"code":"import { inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { ReactiveFormsModule, FormBuilder, Validators } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { AuthService } from '../../core/services/auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/form-field\";\nimport * as i3 from \"@angular/material/input\";\nimport * as i4 from \"@angular/material/button\";\nexport let LoginComponent = /*#__PURE__*/(() => {\n  var _staticBlock;\n  class LoginComponent {\n    constructor() {\n      this.fb = inject(FormBuilder);\n      this.auth = inject(AuthService);\n      this.router = inject(Router);\n      this.form = this.fb.group({\n        username: ['', Validators.required],\n        password: ['', Validators.required]\n      });\n    }\n    submit() {\n      if (this.form.invalid) return;\n      this.auth.setToken('dev-token');\n      this.router.navigateByUrl('/');\n    }\n    static #_ = (() => _staticBlock = () => (this.ɵfac = function LoginComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || LoginComponent)();\n    }, this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 14,\n      vars: 2,\n      consts: [[2, \"max-width\", \"360px\", \"margin\", \"10vh auto\"], [3, \"ngSubmit\", \"formGroup\"], [\"appearance\", \"outline\", 2, \"width\", \"100%\"], [\"matInput\", \"\", \"formControlName\", \"username\", \"required\", \"\"], [\"matInput\", \"\", \"type\", \"password\", \"formControlName\", \"password\", \"required\", \"\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n          i0.ɵɵtext(2, \"Sign in\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.submit();\n          });\n          i0.ɵɵelementStart(4, \"mat-form-field\", 2)(5, \"mat-label\");\n          i0.ɵɵtext(6, \"Username\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"input\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"mat-form-field\", 2)(9, \"mat-label\");\n          i0.ɵɵtext(10, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(11, \"input\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"button\", 5);\n          i0.ɵɵtext(13, \"Login\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.form);\n          i0.ɵɵadvance(9);\n          i0.ɵɵproperty(\"disabled\", ctx.form.invalid);\n        }\n      },\n      dependencies: [CommonModule, ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName, MatFormFieldModule, i2.MatFormField, i2.MatLabel, MatInputModule, i3.MatInput, MatButtonModule, i4.MatButton],\n      encapsulation: 2\n    })))();\n  }\n  _staticBlock();\n  return LoginComponent;\n})();","map":{"version":3,"names":["inject","CommonModule","Router","ReactiveFormsModule","FormBuilder","Validators","MatFormFieldModule","MatInputModule","MatButtonModule","AuthService","LoginComponent","_staticBlock","constructor","fb","auth","router","form","group","username","required","password","submit","invalid","setToken","navigateByUrl","_","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","LoginComponent_Template_form_ngSubmit_3_listener","ɵɵelement","ɵɵadvance","ɵɵproperty","i1","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","RequiredValidator","FormGroupDirective","FormControlName","i2","MatFormField","MatLabel","i3","MatInput","i4","MatButton","encapsulation"],"sources":["/workspace/ks-console-ng/src/app/features/auth/login.component.ts"],"sourcesContent":["import { Component, inject } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { ReactiveFormsModule, FormBuilder, Validators } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { AuthService } from '../../core/services/auth.service';\n\n@Component({\n\tselector: 'app-login',\n\tstandalone: true,\n\timports: [CommonModule, ReactiveFormsModule, MatFormFieldModule, MatInputModule, MatButtonModule],\n\ttemplate: `\n\t\t<div style=\"max-width: 360px; margin: 10vh auto;\">\n\t\t\t<h1>Sign in</h1>\n\t\t\t<form [formGroup]=\"form\" (ngSubmit)=\"submit()\">\n\t\t\t\t<mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n\t\t\t\t\t<mat-label>Username</mat-label>\n\t\t\t\t\t<input matInput formControlName=\"username\" required>\n\t\t\t\t</mat-form-field>\n\t\t\t\t<mat-form-field appearance=\"outline\" style=\"width: 100%;\">\n\t\t\t\t\t<mat-label>Password</mat-label>\n\t\t\t\t\t<input matInput type=\"password\" formControlName=\"password\" required>\n\t\t\t\t</mat-form-field>\n\t\t\t\t<button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"form.invalid\">Login</button>\n\t\t\t</form>\n\t\t</div>\n\t`\n})\nexport class LoginComponent {\n\tprivate readonly fb = inject(FormBuilder);\n\tprivate readonly auth = inject(AuthService);\n\tprivate readonly router = inject(Router);\n\tform = this.fb.group({ username: ['', Validators.required], password: ['', Validators.required] });\n\tsubmit() {\n\t\tif (this.form.invalid) return;\n\t\tthis.auth.setToken('dev-token');\n\t\tthis.router.navigateByUrl('/');\n\t}\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}