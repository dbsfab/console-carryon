{"ast":null,"code":"import { inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { RuntimeConfigService } from '../../core/config/runtime-config.service';\nimport * as i0 from \"@angular/core\";\nexport let ClusterService = /*#__PURE__*/(() => {\n  var _staticBlock;\n  class ClusterService {\n    constructor() {\n      this.http = inject(HttpClient);\n      this.cfg = inject(RuntimeConfigService);\n    }\n    listClusters() {\n      return this.http.get(`${this.cfg.apiBaseUrl}/clusters`);\n    }\n    static #_ = (() => _staticBlock = () => (this.ɵfac = function ClusterService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ClusterService)();\n    }, this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ClusterService,\n      factory: ClusterService.ɵfac,\n      providedIn: 'root'\n    })))();\n  }\n  _staticBlock();\n  return ClusterService;\n})();","map":{"version":3,"names":["inject","HttpClient","RuntimeConfigService","ClusterService","_staticBlock","constructor","http","cfg","listClusters","get","apiBaseUrl","_","factory","ɵfac","providedIn"],"sources":["/workspace/ks-console-ng/src/app/shared/services/cluster.service.ts"],"sourcesContent":["import { Injectable, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { RuntimeConfigService } from '../../core/config/runtime-config.service';\n\nexport interface Cluster { name: string; }\n\n@Injectable({ providedIn: 'root' })\nexport class ClusterService {\n\tprivate readonly http = inject(HttpClient);\n\tprivate readonly cfg = inject(RuntimeConfigService);\n\tlistClusters() { return this.http.get<Cluster[]>(`${this.cfg.apiBaseUrl}/clusters`); }\n}"],"mappings":"AAAA,SAAqBA,MAAM,QAAQ,eAAe;AAClD,SAASC,UAAU,QAAQ,sBAAsB;AACjD,SAASC,oBAAoB,QAAQ,0CAA0C;;AAK/E,WAAaC,cAAc;EAAA,IAAAC,YAAA;EAArB,MAAOD,cAAc;IAD3BE,YAAA;MAEkB,KAAAC,IAAI,GAAGN,MAAM,CAACC,UAAU,CAAC;MACzB,KAAAM,GAAG,GAAGP,MAAM,CAACE,oBAAoB,CAAC;;IACnDM,YAAYA,CAAA;MAAK,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAY,GAAG,IAAI,CAACF,GAAG,CAACG,UAAU,WAAW,CAAC;IAAE;IAAC,QAAAC,CAAA,UAAAP,YAAA,GAAAA,CAAA,M;uCAH1ED,cAAc;IAAA,G;aAAdA,cAAc;MAAAS,OAAA,EAAdT,cAAc,CAAAU,IAAA;MAAAC,UAAA,EADD;IAAM;;;SACnBX,cAAc;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}