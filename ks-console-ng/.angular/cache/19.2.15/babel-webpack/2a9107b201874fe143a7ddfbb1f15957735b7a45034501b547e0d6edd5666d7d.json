{"ast":null,"code":"import { inject } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nexport const authInterceptor = (req, next) => {\n  const token = inject(AuthService).token();\n  if (token) {\n    req = req.clone({\n      setHeaders: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n  }\n  return next(req);\n};","map":{"version":3,"names":["inject","AuthService","authInterceptor","req","next","token","clone","setHeaders","Authorization"],"sources":["/workspace/ks-console-ng/src/app/core/interceptors/auth.interceptor.ts"],"sourcesContent":["import { HttpInterceptorFn } from '@angular/common/http';\nimport { inject } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\n\nexport const authInterceptor: HttpInterceptorFn = (req, next) => {\n\tconst token = inject(AuthService).token();\n\tif (token) {\n\t\treq = req.clone({ setHeaders: { Authorization: `Bearer ${token}` } });\n\t}\n\treturn next(req);\n};"],"mappings":"AACA,SAASA,MAAM,QAAQ,eAAe;AACtC,SAASC,WAAW,QAAQ,0BAA0B;AAEtD,OAAO,MAAMC,eAAe,GAAsBA,CAACC,GAAG,EAAEC,IAAI,KAAI;EAC/D,MAAMC,KAAK,GAAGL,MAAM,CAACC,WAAW,CAAC,CAACI,KAAK,EAAE;EACzC,IAAIA,KAAK,EAAE;IACVF,GAAG,GAAGA,GAAG,CAACG,KAAK,CAAC;MAAEC,UAAU,EAAE;QAAEC,aAAa,EAAE,UAAUH,KAAK;MAAE;IAAE,CAAE,CAAC;EACtE;EACA,OAAOD,IAAI,CAACD,GAAG,CAAC;AACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}